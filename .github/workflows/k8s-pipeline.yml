name: Kubernetes pipeline

on:
    push:
        branches: ['main']
        # paths: ['TP4/ej3/**']
jobs:
    build-images:
        name: Build and Push Docker Image
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_HUB_USERNAME }}
                  password: ${{ secrets.DOCKER_HUB_PASSWORD }}

            - name: Build and push split service image
              uses: docker/build-push-action@v2
              with:
                  context: ./split-service
                  push: true
                  tags: ${{ secrets.DOCKER_HUB_USERNAME }}/split-service:latest

            - name: Build and push entry server image
              uses: docker/build-push-action@v2
              with:
                  context: ./entry-server
                  push: true
                  tags: ${{ secrets.DOCKER_HUB_USERNAME }}/entry-server:latest

            - name: Build and push join service image
              uses: docker/build-push-action@v2
              with:
                  context: ./join-service
                  push: true
                  tags: ${{ secrets.DOCKER_HUB_USERNAME }}/join-service:latest
    infra-up:
        name: Build Kubernetes infrastructure
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            # Setup de CLI de Terraform
            - name: Terraform setup
              uses: hashicorp/setup-terraform@v2

            # Crea el cluster en la nube.
            - name: Terraform init
              working-directory: k8s/terraform
              env:
                  GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}
              run: |
                  echo '${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}' > $GITHUB_WORKSPACE/credentials.json

                  ls -lah

                  terraform init

                  terraform validate

                  terraform plan -lock=false

                  terraform apply -lock=false --auto-approve

            # Configuración CLI Google Cloud.
            - name: Google Cloud authentication
              uses: google-github-actions/auth@v1
              with:
                  credentials_json: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}

            - name: Google Cloud kubectl plugin
              uses: google-github-actions/setup-gcloud@v1
              with:
                  version: '>= 363.0.0'
                  install_components: 'kubectl'

            - name: Google Cloud kubectl cluster metadata
              run: |
                  gcloud info

                  gcloud components list

                  gcloud container clusters get-credentials primary --region=us-east1-b

            # # Esperar hasta que el cluster Kubernetes esté listo.
            # - name: Wait for Kubernetes cluster to be ready
            #   run: |
            #       echo "Waiting for Kubernetes cluster to be ready..."
            #       for i in {1..30}; do
            #         kubectl get nodes && break || sleep 30
            #       done

            # # Despliega los objectos en la nube.
            # - name: Kubernetes deploy
            #   working-directory: k8s
            #   run: |
            #       bash apply.sh
